# Generated by Django 4.2.7 on 2023-11-12 10:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birthday', models.DateField(default='2020-01-01')),
                ('phone_number', models.CharField(blank=True, default='', max_length=12, null=True)),
                ('address', models.CharField(default='', max_length=100)),
                ('building_number', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('postal_code', models.CharField(default='', max_length=6)),
                ('city', models.CharField(default='', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='assets')),
            ],
            options={
                'ordering': ['asset_id'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=1000)),
                ('access_duration', models.IntegerField()),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('vat', models.DecimalField(decimal_places=2, max_digits=3)),
                ('language_cd', models.CharField(max_length=2)),
            ],
            options={
                'ordering': ['course_id'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('exam_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
                ('max_score', models.IntegerField()),
                ('passed', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
            ],
            options={
                'ordering': ['exam_id'],
            },
        ),
        migrations.CreateModel(
            name='Exam_Question',
            fields=[
                ('exam_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=1000)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.asset')),
            ],
            options={
                'ordering': ['exam_question_id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('lesson_id', models.AutoField(primary_key=True, serialize=False)),
                ('seqence', models.CharField(blank=True, max_length=1000, null=True)),
                ('short_description', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'ordering': ['lesson_id'],
            },
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('mentor_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('birthday', models.DateField()),
                ('email', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=12)),
            ],
            options={
                'ordering': ['mentor_id'],
            },
        ),
        migrations.CreateModel(
            name='User_Exam',
            fields=[
                ('user_exam_id', models.AutoField(primary_key=True, serialize=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam', to='main.exam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user_exam_id'],
            },
        ),
        migrations.CreateModel(
            name='User_Course',
            fields=[
                ('user_course_id', models.AutoField(primary_key=True, serialize=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user_course_id'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('seqence', models.CharField(max_length=1000)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
            ],
            options={
                'ordering': ['subject_id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson_Content',
            fields=[
                ('lesson_content_id', models.AutoField(primary_key=True, serialize=False)),
                ('seqence', models.CharField(max_length=1000)),
                ('content_type', models.CharField(max_length=100)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.asset')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.lesson')),
            ],
            options={
                'ordering': ['lesson_content_id'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.subject'),
        ),
        migrations.CreateModel(
            name='Exam_Question_Answer',
            fields=[
                ('answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=1000)),
                ('correct', models.BooleanField()),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.asset')),
                ('exam_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.exam_question')),
            ],
            options={
                'ordering': ['answer_id'],
            },
        ),
        migrations.CreateModel(
            name='Exam_Exam_Question',
            fields=[
                ('exam_exam_question_id', models.AutoField(primary_key=True, serialize=False)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.exam')),
                ('exam_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.exam_question')),
            ],
            options={
                'ordering': ['exam_exam_question_id'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='mentor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.mentor'),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('certificate_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField(blank=True, null=True)),
                ('certificate_pdf_path', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['certificate_id'],
            },
        ),
    ]
